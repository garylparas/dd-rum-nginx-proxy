worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Log format
    log_format custom_json_combined escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"http_host":"$http_host",'
        '"status": "$status",'
        '"request_method":"$request_method",'
        '"request_uri":"$request_uri",'
        '"request":"$request",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"request_time":"$request_time",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"http_x_amzn_trace_id":"$http_x_amzn_trace_id"'
    '}';


    access_log /dev/stdout custom_json_combined;
    error_log stderr;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       8080;
        server_name  localhost;

        # Add resolver directives, required when the proxy_pass is a variable
        resolver 1.1.1.1 8.8.8.8 valid=300s ipv6=off;
        resolver_timeout 5s;

        server_tokens off;                      # Only return Nginx in server header
        add_header X-Frame-Options SAMEORIGIN;  # Prevent clickjacking by allowing framing only from the same origin

        error_page 404 /404;

        location /404 {
            default_type application/json;
            return 404 '{"message": "404 - Page Not Found"}';
        }

        location /robots.txt {
            add_header  Content-Type  text/plain;
            return 200 "User-agent: *\nDisallow: /\n";
            access_log off;
            log_not_found off;
        }

        location /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Health check endpoint
        location /health {
            default_type application/json;
            return 200 '{"status": "healthy"}';
        }

        location / {
            # Add an X-Forwarded-For header containing the request client IP address for accurate geoIP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Forward the request using the POST method
            proxy_method POST;

            # Proxy forward to defined Datadog Intake Origin
            proxy_pass https://browser-intake-datadoghq.com;
        }
    }
}
